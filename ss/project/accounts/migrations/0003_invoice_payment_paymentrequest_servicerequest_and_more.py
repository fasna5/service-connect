# Generated by Django 5.1.1 on 2024-11-22 06:29

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_remove_customerreview_customer_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.PositiveIntegerField(editable=False, unique=True)),
                ('invoice_type', models.CharField(choices=[('service_request', 'Service Request'), ('dealer_payment', 'Dealer Payment'), ('provider_payment', 'Service Provider Payment'), ('service_registration', 'service_registration'), ('Ads', 'Ads'), ('lead_purchase', 'lead_purchase'), ('others', 'others')], max_length=20)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('partial_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('payment_balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partially paid', 'partially paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('additional_requirements', models.TextField(blank=True, null=True)),
                ('invoice_document', models.FileField(blank=True, null=True, upload_to='invoice-documents/', validators=[accounts.models.validate_file_size])),
                ('accepted_terms', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_payment', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sent_payment', to=settings.AUTH_USER_MODEL)),
                ('service_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='serviceregister_invoices', to='accounts.serviceregister')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=25)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.CharField(blank=True, max_length=256, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('razorpay', 'razorpay'), ('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('cash', 'Cash')], default='razorpay', max_length=50)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounts.invoice')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('DEALER', 'Dealer'), ('SERVICE_PROVIDER', 'Service Provider')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be between 9 and 15 digits.', regex='^\\d{9,15}$')])),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('razorpay', 'razorpay'), ('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('cash', 'Cash')], max_length=20)),
                ('account_holder_name', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=50)),
                ('bank_branch', models.CharField(max_length=50)),
                ('account_number', models.CharField(max_length=50)),
                ('ifsc_code', models.CharField(max_length=50)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='payment-request/', validators=[accounts.models.validate_file_size])),
                ('admin', models.ForeignKey(limit_choices_to={'is_superuser': True}, on_delete=django.db.models.deletion.PROTECT, related_name='received_payment_requests', to=settings.AUTH_USER_MODEL)),
                ('country_code', models.ForeignKey(blank=True, max_length=25, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.country_codes')),
                ('dealer_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sent_payment_requests', to='accounts.dealer')),
                ('service_provider_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sent_payment_requests', to='accounts.serviceprovider')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(editable=False, max_length=10, unique=True)),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('work_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acceptance_status', models.CharField(choices=[('accept', 'accept'), ('decline', 'decline'), ('pending', 'pending')], default='pending', max_length=20)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('availability_from', models.DateTimeField()),
                ('availability_to', models.DateTimeField()),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_request/', validators=[accounts.models.validate_file_size])),
                ('reschedule_status', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_servicerequest', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicerequest', to='accounts.serviceregister')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_servicerequest', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='service_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicerequests_invoices', to='accounts.servicerequest'),
        ),
        migrations.CreateModel(
            name='DeclineServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decline_reason', models.TextField()),
                ('images', models.ImageField(blank=True, null=True, upload_to='decline/', validators=[accounts.models.validate_file_size])),
                ('service_requests', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='decline_services', to='accounts.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='reviews/', validators=[accounts.models.validate_file_size])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_review', to=settings.AUTH_USER_MODEL)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_review', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicerequest', to='accounts.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('images', models.ImageField(blank=True, null=True, upload_to='complaint/', validators=[accounts.models.validate_file_size])),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_compliant', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_compliant', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='accounts.servicerequest')),
            ],
        ),
    ]
